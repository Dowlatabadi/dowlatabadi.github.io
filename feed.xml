<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Mehrdad Dowlatabadi</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2021-05-13T11:23:17+08:00</updated> <author> <name>Mehrdad Dowlatabadi</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en-US" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Mehrdad Dowlatabadi </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>T-SQl Partition Command - Simple Use Cases</title><link href="/posts/T-SQL-Partition-Command/" rel="alternate" type="text/html" title="T-SQl Partition Command - Simple Use Cases" /><published>2021-05-13T00:00:00+08:00</published> <updated>2021-05-13T11:22:20+08:00</updated> <id>/posts/T-SQL-Partition-Command/</id> <content src="/posts/T-SQL-Partition-Command/" /> <author> <name>Mehrdad Dowlatabadi</name> </author> <category term="T-SQl" /> <category term="Partition Command" /> <summary> OVER (PARTITION BY *value_expression* ) Divides the query result set into partitions. The window function is applied to each partition separately and computation restarts for each partition. Use Cases Delete Duplicate Grouped Records (Make and Keep 1-element Groups) assume you group your table based on Type. You only want keep one record for each group say older one. using nested query... </summary> </entry> <entry><title>Linux Useful Commands - ls, grep, pipe, ps, for, sleep,head, tail</title><link href="/posts/Linux-Useful-Commands/" rel="alternate" type="text/html" title="Linux Useful Commands - ls, grep, pipe, ps, for, sleep,head, tail" /><published>2021-02-18T00:00:00+08:00</published> <updated>2021-02-20T09:27:36+08:00</updated> <id>/posts/Linux-Useful-Commands/</id> <content src="/posts/Linux-Useful-Commands/" /> <author> <name>Mehrdad Dowlatabadi</name> </author> <category term="Linux" /> <category term="Useful Commands" /> <summary> ls - List information about the FILEs Useful ls options -l long listing format -L show info about symbolic links reference -1 lined format -a show hidden files -h human friendly output format for sizes and more -S sort by file size (directories would come first) -t sort by modification time -r reverse output order -p append / indicator to directories -F ... </summary> </entry> <entry><title>Distributed Transactions</title><link href="/posts/Distributed-Transactions/" rel="alternate" type="text/html" title="Distributed Transactions" /><published>2021-02-06T00:00:00+08:00</published> <updated>2021-02-06T00:00:00+08:00</updated> <id>/posts/Distributed-Transactions/</id> <content src="/posts/Distributed-Transactions/" /> <author> <name>Mehrdad Dowlatabadi</name> </author> <category term="Distributed Systems" /> <category term="Two Phase Commitment" /> <summary> Distributed Commitment To commit some action on distributed nodes, we need to harmonize the commitment between nodes, that way we are sure that the all nodes together go to commit state and all do the action. In other words commitment should occur if and only if all nodes commit the action. If one of nodes failed to commit the other nodes should abort and never commit. Two Phase Commitment An... </summary> </entry> <entry><title>Check for Overlapping Timespans</title><link href="/posts/Check-for-Overlapping-times/" rel="alternate" type="text/html" title="Check for Overlapping Timespans" /><published>2021-02-04T00:00:00+08:00</published> <updated>2021-02-07T07:38:58+08:00</updated> <id>/posts/Check-for-Overlapping-times/</id> <content src="/posts/Check-for-Overlapping-times/" /> <author> <name>Mehrdad Dowlatabadi</name> </author> <category term="Challenges" /> <category term="Timespan Overlap Check" /> <summary> A long time ago I wanted to check if two timespans are overlapping each other. The question looks actually simple but, It gets tricky in implementation, specially when you are checking conditions against database value you need to find an optimized solution. one Intuitive approach is to find out if the first timespan start is within the second timespan or again first timespan end is within seco... </summary> </entry> <entry><title>Lambda-Map-Filter-Reduce-For-C#!</title><link href="/posts/Lambda-Map-Filter-Reduce-For-C/" rel="alternate" type="text/html" title="Lambda-Map-Filter-Reduce-For-C#!" /><published>2021-01-29T00:00:00+08:00</published> <updated>2021-02-20T09:27:33+08:00</updated> <id>/posts/Lambda-Map-Filter-Reduce-For-C/</id> <content src="/posts/Lambda-Map-Filter-Reduce-For-C/" /> <author> <name>Mehrdad Dowlatabadi</name> </author> <category term="Programming" /> <category term="C#" /> <summary> Quick look at equvalents of useful functionalities in c#: C# Python Func x =&amp;gt; x * x Lambda function lambda x: x * x Select l1.select(x=&amp;gt;x*x) Map list(map(lambda x:x * x,l1)) ☰ [x * x for x in l1] Where l1.Where(x=&amp;gt;x&amp;gt;10) Filter list(filter(lambda x:x&amp;gt;10,l1)) ☰ [x for x in l1... </summary> </entry> </feed>
